{"version":3,"sources":["webpack:///./node_modules/html-to-image/es/util.js","webpack:///./node_modules/html-to-image/es/getBlobFromURL.js","webpack:///./node_modules/html-to-image/es/clonePseudoElements.js","webpack:///./node_modules/html-to-image/es/cloneNode.js","webpack:///./node_modules/html-to-image/es/embedResources.js","webpack:///./node_modules/html-to-image/es/embedImages.js","webpack:///./node_modules/html-to-image/es/embedWebFonts.js","webpack:///./node_modules/html-to-image/es/index.js","webpack:///./node_modules/html-to-image/es/applyStyleWithOptions.js"],"names":["__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","WOFF","mimes","woff","woff2","ttf","eot","png","jpg","jpeg","gif","tiff","svg","getMimeType","url","extension","match","exec","getExtension","toLowerCase","isDataUrl","search","makeDataUrl","content","mimeType","uuid","counter","Math","random","pow","toString","slice","toArray","arrayLike","arr","i","l","length","push","px","node","styleProperty","val","window","getComputedStyle","getPropertyValue","parseFloat","replace","canvasToBlob","canvas","toBlob","binaryString","atob","toDataURL","split","len","binaryArray","Uint8Array","charCodeAt","Blob","type","createImage","img","Image","onload","onerror","crossOrigin","decoding","src","nodeToDataURL","width","height","this","xmlns","document","createElementNS","foreignObject","setAttribute","appendChild","XMLSerializer","serializeToString","encodeURIComponent","html","svgToDataURL","cache","getBlobFromURL","options","cacheKey","key","test","getCacheKey","cacheBust","Date","getTime","deferred","fetch","res","blob","contentType","headers","get","reader","FileReader","onloadend","readAsDataURL","dataURL","catch","reason","placeholder","imagePlaceholder","parts","msg","message","console","error","getPseudoElementStyle","className","pseudo","style","selector","cssText","formatCSSText","map","name","getPropertyPriority","join","formatCSSProperties","createTextNode","clonePseudoElement","nativeNode","clonedNode","err","styleElement","createElement","cloneSingleNode","HTMLCanvasElement","cloneNode","cloneCanvasElement","HTMLVideoElement","poster","data","cloneVideoElement","decorate","Element","source","target","forEach","setProperty","cloneCSSStyle","clonePseudoElements","HTMLTextAreaElement","innerHTML","HTMLInputElement","cloneInputValue","isRoot","filter","_a","children","tagName","toUpperCase","assignedNodes","shadowRoot","childNodes","reduce","child","clonedChild","cloneChildren","URL_REGEX","URL_WITH_FORMAT_REGEX","FONT_SRC_REGEX","parseURLs","raw","quotation","resourceURL","baseURL","resolvedURL","baseUrl","location","protocol","doc","implementation","createHTMLDocument","base","a","head","body","href","resolveUrl","escaped","RegExp","toRegex","shouldEmbed","embedResources","filteredCSSText","str","preferredFontFormat","format","filterPreferredFontFormat","urls","css","embedImages","background","cssString","embedBackground","HTMLImageElement","SVGImageElement","baseVal","srcset","embedImageNode","deferreds","all","embedChildren","cssFetchCache","fetchCSS","text","embedFonts","meta","regexUrl","loadFonts","startsWith","URL","parseCSS","keyframesRegex","matches","importRegex","unifiedRegex","lastIndex","getWebFontRules","cssRules","rule","CSSRule","FONT_FACE_RULE","parseWebFontRules","ownerDocument","Error","styleSheets","ret","sheet","item","index","IMPORT_RULE","importIndex","metadata","insertRule","inline","find","getCSSRules","getWebFontCSS","rules","parentStyleSheet","cssTexts","getImageSize","leftBorder","rightBorder","clientWidth","getNodeWidth","topBorder","bottomBorder","clientHeight","getNodeHeight","toSvg","fontEmbedCSS","styleNode","sytleContent","firstChild","insertBefore","embedWebFonts","backgroundColor","manual","Object","keys","applyStyleWithOptions","toCanvas","context","getContext","ratio","pixelRatio","FINAL_PROCESS","process","env","devicePixelRatio","parseInt","Number","isNaN","getPixelRatio","canvasWidth","canvasHeight","skipAutoScale","checkCanvasDimensions","fillStyle","fillRect","drawImage","toPixelData","getImageData","toPng","toJpeg","quality","getFontEmbedCSS"],"mappings":"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","file":"js/vendors~chunk-html-to-image.js","sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nconst WOFF = 'application/font-woff';\nconst JPEG = 'image/jpeg';\nconst mimes = {\n    woff: WOFF,\n    woff2: WOFF,\n    ttf: 'application/font-truetype',\n    eot: 'application/vnd.ms-fontobject',\n    png: 'image/png',\n    jpg: JPEG,\n    jpeg: JPEG,\n    gif: 'image/gif',\n    tiff: 'image/tiff',\n    svg: 'image/svg+xml',\n};\nexport function getExtension(url) {\n    const match = /\\.([^./]*?)$/g.exec(url);\n    return match ? match[1] : '';\n}\nexport function getMimeType(url) {\n    const extension = getExtension(url).toLowerCase();\n    return mimes[extension] || '';\n}\nexport function resolveUrl(url, baseUrl) {\n    // url is absolute already\n    if (url.match(/^[a-z]+:\\/\\//i)) {\n        return url;\n    }\n    // url is absolute already, without protocol\n    if (url.match(/^\\/\\//)) {\n        return window.location.protocol + url;\n    }\n    // dataURI, mailto:, tel:, etc.\n    if (url.match(/^[a-z]+:/i)) {\n        return url;\n    }\n    const doc = document.implementation.createHTMLDocument();\n    const base = doc.createElement('base');\n    const a = doc.createElement('a');\n    doc.head.appendChild(base);\n    doc.body.appendChild(a);\n    if (baseUrl) {\n        base.href = baseUrl;\n    }\n    a.href = url;\n    return a.href;\n}\nexport function isDataUrl(url) {\n    return url.search(/^(data:)/) !== -1;\n}\nexport function makeDataUrl(content, mimeType) {\n    return `data:${mimeType};base64,${content}`;\n}\nexport function parseDataUrlContent(dataURL) {\n    return dataURL.split(/,/)[1];\n}\nexport const uuid = (function uuid() {\n    // generate uuid for className of pseudo elements.\n    // We should not use GUIDs, otherwise pseudo elements sometimes cannot be captured.\n    let counter = 0;\n    // ref: http://stackoverflow.com/a/6248722/2519373\n    const random = () => \n    // eslint-disable-next-line no-bitwise\n    `0000${((Math.random() * Math.pow(36, 4)) << 0).toString(36)}`.slice(-4);\n    return () => {\n        counter += 1;\n        return `u${random()}${counter}`;\n    };\n})();\nexport const delay = (ms) => (args) => new Promise((resolve) => setTimeout(() => resolve(args), ms));\nexport function toArray(arrayLike) {\n    const arr = [];\n    for (let i = 0, l = arrayLike.length; i < l; i += 1) {\n        arr.push(arrayLike[i]);\n    }\n    return arr;\n}\nfunction px(node, styleProperty) {\n    const val = window.getComputedStyle(node).getPropertyValue(styleProperty);\n    return parseFloat(val.replace('px', ''));\n}\nexport function getNodeWidth(node) {\n    const leftBorder = px(node, 'border-left-width');\n    const rightBorder = px(node, 'border-right-width');\n    return node.clientWidth + leftBorder + rightBorder;\n}\nexport function getNodeHeight(node) {\n    const topBorder = px(node, 'border-top-width');\n    const bottomBorder = px(node, 'border-bottom-width');\n    return node.clientHeight + topBorder + bottomBorder;\n}\nexport function getPixelRatio() {\n    let ratio;\n    let FINAL_PROCESS;\n    try {\n        FINAL_PROCESS = process;\n    }\n    catch (e) {\n        // pass\n    }\n    const val = FINAL_PROCESS && FINAL_PROCESS.env\n        ? FINAL_PROCESS.env.devicePixelRatio\n        : null;\n    if (val) {\n        ratio = parseInt(val, 10);\n        if (Number.isNaN(ratio)) {\n            ratio = 1;\n        }\n    }\n    return ratio || window.devicePixelRatio || 1;\n}\nexport function canvasToBlob(canvas) {\n    if (canvas.toBlob) {\n        return new Promise((resolve) => canvas.toBlob(resolve));\n    }\n    return new Promise((resolve) => {\n        const binaryString = window.atob(canvas.toDataURL().split(',')[1]);\n        const len = binaryString.length;\n        const binaryArray = new Uint8Array(len);\n        for (let i = 0; i < len; i += 1) {\n            binaryArray[i] = binaryString.charCodeAt(i);\n        }\n        resolve(new Blob([binaryArray], { type: 'image/png' }));\n    });\n}\nexport function createImage(url) {\n    return new Promise((resolve, reject) => {\n        const img = new Image();\n        img.onload = () => resolve(img);\n        img.onerror = reject;\n        img.crossOrigin = 'anonymous';\n        img.decoding = 'sync';\n        img.src = url;\n    });\n}\nexport function svgToDataURL(svg) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return Promise.resolve()\n            .then(() => new XMLSerializer().serializeToString(svg))\n            .then(encodeURIComponent)\n            .then((html) => `data:image/svg+xml;charset=utf-8,${html}`);\n    });\n}\nexport function nodeToDataURL(node, width, height) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const xmlns = 'http://www.w3.org/2000/svg';\n        const svg = document.createElementNS(xmlns, 'svg');\n        const foreignObject = document.createElementNS(xmlns, 'foreignObject');\n        svg.setAttribute('width', `${width}`);\n        svg.setAttribute('height', `${height}`);\n        svg.setAttribute('viewBox', `0 0 ${width} ${height}`);\n        foreignObject.setAttribute('width', '100%');\n        foreignObject.setAttribute('height', '100%');\n        foreignObject.setAttribute('x', '0');\n        foreignObject.setAttribute('y', '0');\n        foreignObject.setAttribute('externalResourcesRequired', 'true');\n        svg.appendChild(foreignObject);\n        foreignObject.appendChild(node);\n        return svgToDataURL(svg);\n    });\n}\n//# sourceMappingURL=util.js.map","import { parseDataUrlContent } from './util';\nconst cache = {};\nfunction getCacheKey(url) {\n    let key = url.replace(/\\?.*/, '');\n    // font resourse\n    if (/ttf|otf|eot|woff2?/i.test(key)) {\n        key = key.replace(/.*\\//, '');\n    }\n    return key;\n}\nexport function getBlobFromURL(url, options) {\n    const cacheKey = getCacheKey(url);\n    if (cache[cacheKey] != null) {\n        return cache[cacheKey];\n    }\n    // cache bypass so we dont have CORS issues with cached images\n    // ref: https://developer.mozilla.org/en/docs/Web/API/XMLHttpRequest/Using_XMLHttpRequest#Bypassing_the_cache\n    if (options.cacheBust) {\n        // eslint-disable-next-line no-param-reassign\n        url += (/\\?/.test(url) ? '&' : '?') + new Date().getTime();\n    }\n    const failed = (reason) => {\n        let placeholder = '';\n        if (options.imagePlaceholder) {\n            const parts = options.imagePlaceholder.split(/,/);\n            if (parts && parts[1]) {\n                placeholder = parts[1];\n            }\n        }\n        let msg = `Failed to fetch resource: ${url}`;\n        if (reason) {\n            msg = typeof reason === 'string' ? reason : reason.message;\n        }\n        if (msg) {\n            console.error(msg);\n        }\n        return {\n            blob: placeholder,\n            contentType: '',\n        };\n    };\n    const deferred = window\n        .fetch(url)\n        .then((res) => \n    // eslint-disable-next-line promise/no-nesting\n    res.blob().then((blob) => ({\n        blob,\n        contentType: res.headers.get('Content-Type') || '',\n    })))\n        .then(({ blob, contentType }) => new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onloadend = () => resolve({\n            contentType,\n            blob: reader.result,\n        });\n        reader.onerror = reject;\n        reader.readAsDataURL(blob);\n    }))\n        .then(({ blob, contentType }) => ({\n        contentType,\n        blob: parseDataUrlContent(blob),\n    }))\n        // on failed\n        .catch(failed);\n    // cache result\n    cache[cacheKey] = deferred;\n    return deferred;\n}\n//# sourceMappingURL=getBlobFromURL.js.map","import { uuid, toArray } from './util';\nfunction formatCSSText(style) {\n    const content = style.getPropertyValue('content');\n    return `${style.cssText} content: '${content.replace(/'|\"/g, '')}';`;\n}\nfunction formatCSSProperties(style) {\n    return toArray(style)\n        .map((name) => {\n        const value = style.getPropertyValue(name);\n        const priority = style.getPropertyPriority(name);\n        return `${name}: ${value}${priority ? ' !important' : ''};`;\n    })\n        .join(' ');\n}\nfunction getPseudoElementStyle(className, pseudo, style) {\n    const selector = `.${className}:${pseudo}`;\n    const cssText = style.cssText\n        ? formatCSSText(style)\n        : formatCSSProperties(style);\n    return document.createTextNode(`${selector}{${cssText}}`);\n}\nfunction clonePseudoElement(nativeNode, clonedNode, pseudo) {\n    const style = window.getComputedStyle(nativeNode, pseudo);\n    const content = style.getPropertyValue('content');\n    if (content === '' || content === 'none') {\n        return;\n    }\n    const className = uuid();\n    try {\n        clonedNode.className = `${clonedNode.className} ${className}`;\n    }\n    catch (err) {\n        return;\n    }\n    const styleElement = document.createElement('style');\n    styleElement.appendChild(getPseudoElementStyle(className, pseudo, style));\n    clonedNode.appendChild(styleElement);\n}\nexport function clonePseudoElements(nativeNode, clonedNode) {\n    clonePseudoElement(nativeNode, clonedNode, ':before');\n    clonePseudoElement(nativeNode, clonedNode, ':after');\n}\n//# sourceMappingURL=clonePseudoElements.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { getBlobFromURL } from './getBlobFromURL';\nimport { clonePseudoElements } from './clonePseudoElements';\nimport { createImage, getMimeType, makeDataUrl, toArray } from './util';\nfunction cloneCanvasElement(node) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const dataURL = node.toDataURL();\n        if (dataURL === 'data:,') {\n            return Promise.resolve(node.cloneNode(false));\n        }\n        return createImage(dataURL);\n    });\n}\nfunction cloneVideoElement(node, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return Promise.resolve(node.poster)\n            .then((url) => getBlobFromURL(url, options))\n            .then((data) => makeDataUrl(data.blob, getMimeType(node.poster) || data.contentType))\n            .then((dataURL) => createImage(dataURL));\n    });\n}\nfunction cloneSingleNode(node, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (node instanceof HTMLCanvasElement) {\n            return cloneCanvasElement(node);\n        }\n        if (node instanceof HTMLVideoElement && node.poster) {\n            return cloneVideoElement(node, options);\n        }\n        return Promise.resolve(node.cloneNode(false));\n    });\n}\nconst isSlotElement = (node) => node.tagName != null && node.tagName.toUpperCase() === 'SLOT';\nfunction cloneChildren(nativeNode, clonedNode, options) {\n    var _a;\n    return __awaiter(this, void 0, void 0, function* () {\n        const children = isSlotElement(nativeNode) && nativeNode.assignedNodes\n            ? toArray(nativeNode.assignedNodes())\n            : toArray(((_a = nativeNode.shadowRoot) !== null && _a !== void 0 ? _a : nativeNode).childNodes);\n        if (children.length === 0 || nativeNode instanceof HTMLVideoElement) {\n            return Promise.resolve(clonedNode);\n        }\n        return children\n            .reduce((deferred, child) => deferred\n            // eslint-disable-next-line no-use-before-define\n            .then(() => cloneNode(child, options))\n            .then((clonedChild) => {\n            // eslint-disable-next-line promise/always-return\n            if (clonedChild) {\n                clonedNode.appendChild(clonedChild);\n            }\n        }), Promise.resolve())\n            .then(() => clonedNode);\n    });\n}\nfunction cloneCSSStyle(nativeNode, clonedNode) {\n    const source = window.getComputedStyle(nativeNode);\n    const target = clonedNode.style;\n    if (!target) {\n        return;\n    }\n    if (source.cssText) {\n        target.cssText = source.cssText;\n    }\n    else {\n        toArray(source).forEach((name) => {\n            target.setProperty(name, source.getPropertyValue(name), source.getPropertyPriority(name));\n        });\n    }\n}\nfunction cloneInputValue(nativeNode, clonedNode) {\n    if (nativeNode instanceof HTMLTextAreaElement) {\n        clonedNode.innerHTML = nativeNode.value;\n    }\n    if (nativeNode instanceof HTMLInputElement) {\n        clonedNode.setAttribute('value', nativeNode.value);\n    }\n}\nfunction decorate(nativeNode, clonedNode) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (!(clonedNode instanceof Element)) {\n            return Promise.resolve(clonedNode);\n        }\n        return Promise.resolve()\n            .then(() => cloneCSSStyle(nativeNode, clonedNode))\n            .then(() => clonePseudoElements(nativeNode, clonedNode))\n            .then(() => cloneInputValue(nativeNode, clonedNode))\n            .then(() => clonedNode);\n    });\n}\nexport function cloneNode(node, options, isRoot) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (!isRoot && options.filter && !options.filter(node)) {\n            return Promise.resolve(null);\n        }\n        return Promise.resolve(node)\n            .then((clonedNode) => cloneSingleNode(clonedNode, options))\n            .then((clonedNode) => cloneChildren(node, clonedNode, options))\n            .then((clonedNode) => decorate(node, clonedNode));\n    });\n}\n//# sourceMappingURL=cloneNode.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { getBlobFromURL } from './getBlobFromURL';\nimport { getMimeType, isDataUrl, makeDataUrl, resolveUrl } from './util';\nconst URL_REGEX = /url\\((['\"]?)([^'\"]+?)\\1\\)/g;\nconst URL_WITH_FORMAT_REGEX = /url\\([^)]+\\)\\s*format\\(([\"'])([^\"']+)\\1\\)/g;\nconst FONT_SRC_REGEX = /src:\\s*(?:url\\([^)]+\\)\\s*format\\([^)]+\\)[,;]\\s*)+/g;\nexport function toRegex(url) {\n    // eslint-disable-next-line no-useless-escape\n    const escaped = url.replace(/([.*+?^${}()|\\[\\]\\/\\\\])/g, '\\\\$1');\n    return new RegExp(`(url\\\\(['\"]?)(${escaped})(['\"]?\\\\))`, 'g');\n}\nexport function parseURLs(cssText) {\n    const result = [];\n    cssText.replace(URL_REGEX, (raw, quotation, url) => {\n        result.push(url);\n        return raw;\n    });\n    return result.filter((url) => !isDataUrl(url));\n}\nexport function embed(cssText, resourceURL, baseURL, options, get) {\n    const resolvedURL = baseURL ? resolveUrl(resourceURL, baseURL) : resourceURL;\n    return Promise.resolve(resolvedURL)\n        .then((url) => get ? get(url) : getBlobFromURL(url, options))\n        .then((data) => {\n        if (typeof data === 'string') {\n            return makeDataUrl(data, getMimeType(resourceURL));\n        }\n        return makeDataUrl(data.blob, getMimeType(resourceURL) || data.contentType);\n    })\n        .then((dataURL) => cssText.replace(toRegex(resourceURL), `$1${dataURL}$3`))\n        .then((content) => content, () => resolvedURL);\n}\nfunction filterPreferredFontFormat(str, { preferredFontFormat }) {\n    return !preferredFontFormat\n        ? str\n        : str.replace(FONT_SRC_REGEX, (match) => {\n            // eslint-disable-next-line no-constant-condition\n            while (true) {\n                const [src, , format] = URL_WITH_FORMAT_REGEX.exec(match) || [];\n                if (!format) {\n                    return '';\n                }\n                if (format === preferredFontFormat) {\n                    return `src: ${src};`;\n                }\n            }\n        });\n}\nexport function shouldEmbed(url) {\n    return url.search(URL_REGEX) !== -1;\n}\nexport function embedResources(cssText, baseUrl, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (!shouldEmbed(cssText)) {\n            return Promise.resolve(cssText);\n        }\n        const filteredCSSText = filterPreferredFontFormat(cssText, options);\n        return Promise.resolve(filteredCSSText)\n            .then(parseURLs)\n            .then((urls) => urls.reduce((deferred, url) => \n        // eslint-disable-next-line promise/no-nesting\n        deferred.then((css) => embed(css, url, baseUrl, options)), Promise.resolve(filteredCSSText)));\n    });\n}\n//# sourceMappingURL=embedResources.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { getBlobFromURL } from './getBlobFromURL';\nimport { embedResources } from './embedResources';\nimport { getMimeType, isDataUrl, makeDataUrl, toArray } from './util';\nfunction embedBackground(clonedNode, options) {\n    var _a;\n    return __awaiter(this, void 0, void 0, function* () {\n        const background = (_a = clonedNode.style) === null || _a === void 0 ? void 0 : _a.getPropertyValue('background');\n        if (!background) {\n            return Promise.resolve(clonedNode);\n        }\n        return Promise.resolve(background)\n            .then((cssString) => embedResources(cssString, null, options))\n            .then((cssString) => {\n            clonedNode.style.setProperty('background', cssString, clonedNode.style.getPropertyPriority('background'));\n            return clonedNode;\n        });\n    });\n}\nfunction embedImageNode(clonedNode, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (!(clonedNode instanceof HTMLImageElement && !isDataUrl(clonedNode.src)) &&\n            !(clonedNode instanceof SVGImageElement &&\n                !isDataUrl(clonedNode.href.baseVal))) {\n            return Promise.resolve(clonedNode);\n        }\n        const src = clonedNode instanceof HTMLImageElement\n            ? clonedNode.src\n            : clonedNode.href.baseVal;\n        return Promise.resolve(src)\n            .then((url) => getBlobFromURL(url, options))\n            .then((data) => makeDataUrl(data.blob, getMimeType(src) || data.contentType))\n            .then((dataURL) => new Promise((resolve, reject) => {\n            clonedNode.onload = resolve;\n            clonedNode.onerror = reject;\n            if (clonedNode instanceof HTMLImageElement) {\n                clonedNode.srcset = '';\n                clonedNode.src = dataURL;\n            }\n            else {\n                clonedNode.href.baseVal = dataURL;\n            }\n        }))\n            .then(() => clonedNode, () => clonedNode);\n    });\n}\nfunction embedChildren(clonedNode, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const children = toArray(clonedNode.childNodes);\n        // eslint-disable-next-line no-use-before-define\n        const deferreds = children.map((child) => embedImages(child, options));\n        return Promise.all(deferreds).then(() => clonedNode);\n    });\n}\nexport function embedImages(clonedNode, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (!(clonedNode instanceof Element)) {\n            return Promise.resolve(clonedNode);\n        }\n        return Promise.resolve(clonedNode)\n            .then((node) => embedBackground(node, options))\n            .then((node) => embedImageNode(node, options))\n            .then((node) => embedChildren(node, options));\n    });\n}\n//# sourceMappingURL=embedImages.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { toArray } from './util';\nimport { shouldEmbed, embedResources } from './embedResources';\nconst cssFetchCache = {};\nfunction fetchCSS(url) {\n    const cache = cssFetchCache[url];\n    if (cache != null) {\n        return cache;\n    }\n    const deferred = window.fetch(url).then((res) => ({\n        url,\n        cssText: res.text(),\n    }));\n    cssFetchCache[url] = deferred;\n    return deferred;\n}\nfunction embedFonts(meta) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return meta.cssText.then((raw) => {\n            let cssText = raw;\n            const regexUrl = /url\\([\"']?([^\"')]+)[\"']?\\)/g;\n            const fontLocs = cssText.match(/url\\([^)]+\\)/g) || [];\n            const loadFonts = fontLocs.map((location) => {\n                let url = location.replace(regexUrl, '$1');\n                if (!url.startsWith('https://')) {\n                    url = new URL(url, meta.url).href;\n                }\n                // eslint-disable-next-line promise/no-nesting\n                return window\n                    .fetch(url)\n                    .then((res) => res.blob())\n                    .then((blob) => new Promise((resolve, reject) => {\n                    const reader = new FileReader();\n                    reader.onloadend = () => {\n                        // Side Effect\n                        cssText = cssText.replace(location, `url(${reader.result})`);\n                        resolve([location, reader.result]);\n                    };\n                    reader.onerror = reject;\n                    reader.readAsDataURL(blob);\n                }));\n            });\n            // eslint-disable-next-line promise/no-nesting\n            return Promise.all(loadFonts).then(() => cssText);\n        });\n    });\n}\nfunction parseCSS(source) {\n    if (source == null) {\n        return [];\n    }\n    const result = [];\n    const commentsRegex = /(\\/\\*[\\s\\S]*?\\*\\/)/gi;\n    // strip out comments\n    let cssText = source.replace(commentsRegex, '');\n    const keyframesRegex = new RegExp('((@.*?keyframes [\\\\s\\\\S]*?){([\\\\s\\\\S]*?}\\\\s*?)})', 'gi');\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n        const matches = keyframesRegex.exec(cssText);\n        if (matches === null) {\n            break;\n        }\n        result.push(matches[0]);\n    }\n    cssText = cssText.replace(keyframesRegex, '');\n    const importRegex = /@import[\\s\\S]*?url\\([^)]*\\)[\\s\\S]*?;/gi;\n    // to match css & media queries together\n    const combinedCSSRegex = '((\\\\s*?(?:\\\\/\\\\*[\\\\s\\\\S]*?\\\\*\\\\/)?\\\\s*?@media[\\\\s\\\\S]' +\n        '*?){([\\\\s\\\\S]*?)}\\\\s*?})|(([\\\\s\\\\S]*?){([\\\\s\\\\S]*?)})';\n    // unified regex\n    const unifiedRegex = new RegExp(combinedCSSRegex, 'gi');\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n        let matches = importRegex.exec(cssText);\n        if (matches === null) {\n            matches = unifiedRegex.exec(cssText);\n            if (matches === null) {\n                break;\n            }\n            else {\n                importRegex.lastIndex = unifiedRegex.lastIndex;\n            }\n        }\n        else {\n            unifiedRegex.lastIndex = importRegex.lastIndex;\n        }\n        result.push(matches[0]);\n    }\n    return result;\n}\nfunction getCSSRules(styleSheets) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const ret = [];\n        const deferreds = [];\n        // First loop inlines imports\n        styleSheets.forEach((sheet) => {\n            if ('cssRules' in sheet) {\n                try {\n                    toArray(sheet.cssRules).forEach((item, index) => {\n                        if (item.type === CSSRule.IMPORT_RULE) {\n                            let importIndex = index + 1;\n                            const url = item.href;\n                            const deferred = fetchCSS(url)\n                                .then((metadata) => (metadata ? embedFonts(metadata) : ''))\n                                .then((cssText) => parseCSS(cssText).forEach((rule) => {\n                                try {\n                                    sheet.insertRule(rule, rule.startsWith('@import')\n                                        ? (importIndex += 1)\n                                        : sheet.cssRules.length);\n                                }\n                                catch (error) {\n                                    console.error('Error inserting rule from remote css', {\n                                        rule,\n                                        error,\n                                    });\n                                }\n                            }))\n                                .catch((e) => {\n                                console.error('Error loading remote css', e.toString());\n                            });\n                            deferreds.push(deferred);\n                        }\n                    });\n                }\n                catch (e) {\n                    const inline = styleSheets.find((a) => a.href == null) || document.styleSheets[0];\n                    if (sheet.href != null) {\n                        deferreds.push(fetchCSS(sheet.href)\n                            .then((metadata) => (metadata ? embedFonts(metadata) : ''))\n                            .then((cssText) => parseCSS(cssText).forEach((rule) => {\n                            inline.insertRule(rule, sheet.cssRules.length);\n                        }))\n                            .catch((err) => {\n                            console.error('Error loading remote stylesheet', err.toString());\n                        }));\n                    }\n                    console.error('Error inlining remote css file', e.toString());\n                }\n            }\n        });\n        return Promise.all(deferreds).then(() => {\n            // Second loop parses rules\n            styleSheets.forEach((sheet) => {\n                if ('cssRules' in sheet) {\n                    try {\n                        toArray(sheet.cssRules).forEach((item) => {\n                            ret.push(item);\n                        });\n                    }\n                    catch (e) {\n                        console.error(`Error while reading CSS rules from ${sheet.href}`, e.toString());\n                    }\n                }\n            });\n            return ret;\n        });\n    });\n}\nfunction getWebFontRules(cssRules) {\n    return cssRules\n        .filter((rule) => rule.type === CSSRule.FONT_FACE_RULE)\n        .filter((rule) => shouldEmbed(rule.style.getPropertyValue('src')));\n}\nfunction parseWebFontRules(node) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return new Promise((resolve, reject) => {\n            if (node.ownerDocument == null) {\n                reject(new Error('Provided element is not within a Document'));\n            }\n            resolve(toArray(node.ownerDocument.styleSheets));\n        })\n            .then((styleSheets) => getCSSRules(styleSheets))\n            .then(getWebFontRules);\n    });\n}\nexport function getWebFontCSS(node, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return parseWebFontRules(node)\n            .then((rules) => Promise.all(rules.map((rule) => {\n            const baseUrl = rule.parentStyleSheet\n                ? rule.parentStyleSheet.href\n                : null;\n            return embedResources(rule.cssText, baseUrl, options);\n        })))\n            .then((cssTexts) => cssTexts.join('\\n'));\n    });\n}\nexport function embedWebFonts(clonedNode, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return (options.fontEmbedCSS != null\n            ? Promise.resolve(options.fontEmbedCSS)\n            : getWebFontCSS(clonedNode, options)).then((cssText) => {\n            const styleNode = document.createElement('style');\n            const sytleContent = document.createTextNode(cssText);\n            styleNode.appendChild(sytleContent);\n            if (clonedNode.firstChild) {\n                clonedNode.insertBefore(styleNode, clonedNode.firstChild);\n            }\n            else {\n                clonedNode.appendChild(styleNode);\n            }\n            return clonedNode;\n        });\n    });\n}\n//# sourceMappingURL=embedWebFonts.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { cloneNode } from './cloneNode';\nimport { embedImages } from './embedImages';\nimport { applyStyleWithOptions } from './applyStyleWithOptions';\nimport { embedWebFonts, getWebFontCSS } from './embedWebFonts';\nimport { getNodeWidth, getNodeHeight, getPixelRatio, createImage, canvasToBlob, nodeToDataURL, } from './util';\nfunction getImageSize(node, options = {}) {\n    const width = options.width || getNodeWidth(node);\n    const height = options.height || getNodeHeight(node);\n    return { width, height };\n}\nexport function toSvg(node, options = {}) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const { width, height } = getImageSize(node, options);\n        return Promise.resolve(node)\n            .then((nativeNode) => cloneNode(nativeNode, options, true))\n            .then((clonedNode) => embedWebFonts(clonedNode, options))\n            .then((clonedNode) => embedImages(clonedNode, options))\n            .then((clonedNode) => applyStyleWithOptions(clonedNode, options))\n            .then((clonedNode) => nodeToDataURL(clonedNode, width, height));\n    });\n}\nconst dimensionCanvasLimit = 16384; // as per https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas#maximum_canvas_size\nfunction checkCanvasDimensions(canvas) {\n    if (canvas.width > dimensionCanvasLimit ||\n        canvas.height > dimensionCanvasLimit) {\n        if (canvas.width > dimensionCanvasLimit &&\n            canvas.height > dimensionCanvasLimit) {\n            if (canvas.width > canvas.height) {\n                canvas.height *= dimensionCanvasLimit / canvas.width;\n                canvas.width = dimensionCanvasLimit;\n            }\n            else {\n                canvas.width *= dimensionCanvasLimit / canvas.height;\n                canvas.height = dimensionCanvasLimit;\n            }\n        }\n        else if (canvas.width > dimensionCanvasLimit) {\n            canvas.height *= dimensionCanvasLimit / canvas.width;\n            canvas.width = dimensionCanvasLimit;\n        }\n        else {\n            canvas.width *= dimensionCanvasLimit / canvas.height;\n            canvas.height = dimensionCanvasLimit;\n        }\n    }\n}\nexport function toCanvas(node, options = {}) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return toSvg(node, options)\n            .then(createImage)\n            .then((img) => {\n            const canvas = document.createElement('canvas');\n            const context = canvas.getContext('2d');\n            const ratio = options.pixelRatio || getPixelRatio();\n            const { width, height } = getImageSize(node, options);\n            const canvasWidth = options.canvasWidth || width;\n            const canvasHeight = options.canvasHeight || height;\n            canvas.width = canvasWidth * ratio;\n            canvas.height = canvasHeight * ratio;\n            if (!options.skipAutoScale) {\n                checkCanvasDimensions(canvas);\n            }\n            canvas.style.width = `${canvasWidth}`;\n            canvas.style.height = `${canvasHeight}`;\n            if (options.backgroundColor) {\n                context.fillStyle = options.backgroundColor;\n                context.fillRect(0, 0, canvas.width, canvas.height);\n            }\n            context.drawImage(img, 0, 0, canvas.width, canvas.height);\n            return canvas;\n        });\n    });\n}\nexport function toPixelData(node, options = {}) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const { width, height } = getImageSize(node, options);\n        return toCanvas(node, options).then((canvas) => {\n            const ctx = canvas.getContext('2d');\n            return ctx.getImageData(0, 0, width, height).data;\n        });\n    });\n}\nexport function toPng(node, options = {}) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return toCanvas(node, options).then((canvas) => canvas.toDataURL());\n    });\n}\nexport function toJpeg(node, options = {}) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return toCanvas(node, options).then((canvas) => canvas.toDataURL('image/jpeg', options.quality || 1));\n    });\n}\nexport function toBlob(node, options = {}) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return toCanvas(node, options).then(canvasToBlob);\n    });\n}\nexport function getFontEmbedCSS(node, options = {}) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return getWebFontCSS(node, options);\n    });\n}\n//# sourceMappingURL=index.js.map","export function applyStyleWithOptions(node, options) {\n    const { style } = node;\n    if (options.backgroundColor) {\n        style.backgroundColor = options.backgroundColor;\n    }\n    if (options.width) {\n        style.width = `${options.width}px`;\n    }\n    if (options.height) {\n        style.height = `${options.height}px`;\n    }\n    const manual = options.style;\n    if (manual != null) {\n        Object.keys(manual).forEach((key) => {\n            style[key] = manual[key];\n        });\n    }\n    return node;\n}\n//# sourceMappingURL=applyStyleWithOptions.js.map"],"sourceRoot":""}